{"ast":null,"code":"var _jsxFileName = \"/Users/qiangfu/Desktop/smart-brain-front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '8b95bb438a854743a07b3f4893e8ed18'\n});\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 750\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); //console.log(width, height);\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      //console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict({\n        id: \"a403429f2ddf4b49b307e318f00e528b\",\n        version: \"34ce21a40cc24b6b96ffee54aabff139\"\n      }, //1. Calling setState() in React is asynchronous, for various reasons (mainly performance).\n      //2. Under the covers React will batch multiple calls to setState() into a single call,\n      //and then re-render the component a single time, rather than re-rendering for every state change. \n      //3. so below we use input url as the data to send to api, since imageUrl wont be updated\n      //at the time when we called .predict function\n      this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/qiangfu/Desktop/smart-brain-front-end/src/App.js"],"names":["React","Component","Navigation","Signin","Register","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","models","predict","version","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey:'8b95bb438a854743a07b3f4893e8ed18'\n});\n\n\n\nconst particlesOptions = {\n  \"particles\":{\n    \"number\": {\n      \"value\": 100,\n      \"density\":{\n        \"enable\": true,\n        \"value_area\": 750\n      }\n    }\n  }\n\n}\n\n\n\n      \n\n\nconst initialState={\n      input:'',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n\n    }\n\n\n\nclass App extends Component  {\n  constructor(){\n    super();\n    this.state=initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    //console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n\n\n    }\n  }\n\n  displayFaceBox = (box) => {\n    //console.log(box);\n    this.setState({box:box});\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input});\n    app.models\n      .predict(\n        {\n          id: \"a403429f2ddf4b49b307e318f00e528b\",\n          version: \"34ce21a40cc24b6b96ffee54aabff139\",\n        },\n\n        //1. Calling setState() in React is asynchronous, for various reasons (mainly performance).\n        //2. Under the covers React will batch multiple calls to setState() into a single call,\n        //and then re-render the component a single time, rather than re-rendering for every state change. \n        //3. so below we use input url as the data to send to api, since imageUrl wont be updated\n        //at the time when we called .predict function\n        this.state.input)\n        .then(response => {\n          if (response){\n            fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {'Content-Type':'application/json'},\n              body: JSON.stringify({\n              id:this.state.user.id\n            })\n          })\n\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user,{entries:count}))\n            })\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n\n        })\n        .catch(err => console.log(err));\n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n    } else if (route === 'home')\n    {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route:route});\n  }\n\n\n  render(){\n\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (    \n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />   \n              <FaceRecognition box= {box} imageUrl={imageUrl} />\n            </div>\n          :(\n            route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n          )\n          \n\n        }\n      </div>\n    );\n\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}